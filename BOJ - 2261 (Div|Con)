import sys
input = sys.stdin.readline
def brute(data,s,e):
    ans=-1
    for i in range(s,e):
        for j in range(i+1,e+1):
            d = dist(data[i],data[j])
            if ans==-1 or ans>d:
                ans = d
    return ans
def dist(h1,h2):        # 두 지점간의 거리값
    return (h1[0]-h2[0])*(h1[0]-h2[0]) + (h1[1]-h2[1])*(h1[1]-h2[1])
def sol(data,s,e):
    n = e-s+1
    if n<=3:
        return brute(data,s,e)
    mid = (s+e)//2
    left = sol(data,s,mid)      # 반으로 나눠 왼쪽 최소거리값
    right = sol(data,mid+1,e)
    ans = min(left,right)       # 양쪽에서 최소 거리값
    res = []
    for i in range(s,e+1):      
        d = data[i][0] - data[mid][0]    # O(n)  가로기준
        if d**2<ans:                    # 최소거리값 만큼의 지점이 있는지 탐색
            res.append(data[i])
    res.sort(key=lambda x:x[1])
    m = len(res)
    for i in range(m-1):
        for j in range(i+1,m):            # 존재하는 지점 중 최소거리값 탐색
            y = res[j][1] - res[i][1]    #O(n) 세로기준
            if y**2 < ans:
                d = dist(res[i],res[j])
                if d<ans:
                    ans = d
            else:
                break
    return ans
n = int(input())
data = [[*map(int,input().split())] for _ in range(n)]
data.sort(key=lambda x:x[0])
print(sol(data,0,n-1))

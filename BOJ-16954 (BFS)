from _collections import deque  ## 문제의 조건이 너무 엉터리 같다.. (다른 문제 푸는것을 추천)
import sys
input = sys.stdin.readline
n= 8
data = [[input().rstrip()] for _ in range(n)]
comp = [[[0]*n for _ in range(n)] for _ in range(n)]  #3차원 (변경되는 맵 담기)
def bfs():
    q = deque()
    start = ['........']
    for i in range(len(data)):
        q.append(*data[i])

    for i in range(n):
        comp[i] = list(q)
        q.pop()
        q.appendleft(*start)
    T = deque()
    T.append((n-1,0,0))
    while T:
        x,y,cnt = T.popleft()
        if cnt==8:
            return 1
        for k in (0,1),(0,-1),(-1,0),(-1,-1),(-1,1),(0,0):
            nx = x+k[0]
            ny = y+k[1]
            if 0>nx or nx>=n or 0>ny or ny>=n or cnt==n: continue
            if comp[cnt][nx][ny] == '#': continue
            if comp[cnt][nx-1][ny]=='#': continue
            T.append((x,ny,cnt+1))
    return 0
print(bfs())

############################################# + DP  (firestone 님의 코드)

input = __import__('sys').stdin.readline
a = [input() for _ in range(8)] # 체스판 
d = [[False] * 8 for _ in range(8)] # dp용 배열
d[7][0] = True
for i in range(8): # 0초부터 7초까지 살펴봄

    #-- 벽이 내려온 것을 다시 맞춰주는 작업-- --#
    # 0초일 때는 사실상 필요 없음
    for j in range(8-i): 
        for k in range(8): #(j+1,k+1) 포인트
            if a[j][k] == '#':
                d[i + j][k] = False
    #-- -- -- -- -- -- -- -- -- -- -- -- -- --#           
    td = [[False] * 8 for _ in range(8)] # true check 
    #-- -- -- -- --케릭터가 갈 수 있는 곳을 True로 만들기-- -- -- --#
    for j in range(8):
        for k in range(8):
            for x in range(-1, 2): 
                for y in range(-1, 2): 
                    # 순서대로 - [5]가 현재 위치 
                    #  1 | 2 | 3
                    # --- --- ---
                    #  4 |[5]| 6 
                    # --- --- ---
                    #  7 | 8 | 9
                    
                    if 0<= j+x <8 and 0<= k+y <8 and d[j+x][k+y]:
                        td[j][k] = True
    #-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --#                       
    for j in range(8 - i):
        for k in range(8):
            if a[j][k] == '#':
                td[i+j][k] = False
    d = td
    #print(f'{i} 초 후')
    #[print(i) for i in td];print()

print(1 if sum(map(sum, d)) else 0)
